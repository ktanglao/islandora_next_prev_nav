<?php

function next_prev_islandora_view_object_alter(&$object, &$rendered){
  if(in_array('islandora:collectionCModel', $object->models)){
    return;
  }
  else{
    $button = function($target_pid,$target_label,$direction){
      $string = "<p>$direction</p><button><a href='/islandora/object/$target_pid'>$target_label</a></button>";
      return $string;
    };
    $index = get_list_isMemberOf($object->id);
    $current_obj_index = function($pid,$array){
      foreach($array as $key => $obj){
        if($obj['object']['value'] == $pid){
          return $key;
        }
      }
    };
    $pos = $current_obj_index($object->id, $index);
    if($pos == count($index)-1){
      $pos_down = $pos - 1;
      $rendered[null]['#markup'] = $rendered[null]['#markup'] .  $button(get_next_or_prev($object->id,'p'),$index[$pos_down]['label']['value'],'previous item');
    }
    elseif($pos == 0){
      $pos_up = $pos + 1;
      $rendered[null]['#markup'] = $rendered[null]['#markup'] . $button(get_next_or_prev($object->id,'n'),$index[$pos_up]['label']['value'],'next item');
    }
    else{
      $pos_down = $pos - 1;
      $pos_up = $pos + 1;    
      $rendered[null]['#markup'] = $rendered[null]['#markup'] . $button(get_next_or_prev($object->id,'p'),$index[$pos_down]['label']['value'],'previous item') . $button(get_next_or_prev($object->id,'n'),$index[$pos_up]['label']['value'],'next item');
    }    
  }
}

//the bones of this function should be credited to the authors of islandora_solution_pack_compound
function get_list_isMemberOf($pid){
  $rels_predicate = variable_get('islandora_collection_object_relationship', 'isMemberOf');
  $objects = array();
  $connection = islandora_get_tuque_connection();
  $pid_parts = explode(":", $pid);
  $escaped_pid = str_replace(':', '_', $pid);
  if ($connection) {
    $query = <<<EOQ
  SELECT ?object ?label FROM <#ri>
  WHERE {
    ?object <fedora-model:label> ?label;
            <fedora-rels-ext:isMemberOfCollection> <info:fedora/$pid_parts[0]:collection>
  }
  ORDER BY ?label
EOQ;
 $results = $connection->repository->ri->sparqlQuery($query);
  }
 return $results;
}

function get_next_or_prev($pid, $op){
  $pid_part = explode(":", $pid); 
  if($op == 'n'){
  $pid_incr = $pid_part[1] + 1;
  }
  else{
  $pid_incr = $pid_part[1] - 1;
}
  $next = $pid_part[0].":".$pid_incr;
  return $next;
}

?>
